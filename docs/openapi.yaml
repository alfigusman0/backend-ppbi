openapi: 3.0.3
info:
  title: API PPBI - Complete Service (Auth, Users, Profile, Cabang, Profile_Cabang)
  version: 1.5.0
  description: |
    Dokumentasi lengkap Complete API Service untuk PPBI (Persatuan Penggemar Bonsai Indonesia).
    Sistem mencakup autentikasi, manajemen users, profil user, cabang, dan profil detil per cabang termasuk struktur organisasi, visi-misi, dan dokumen SK.
  contact:
    name: API Support
    email: support@ppbi.local
  x-changelog:
    - version: 1.5.0
      date: 2025-10-29
      changes:
        - Added complete Profile Cabang Management CRUD endpoints
        - Added profile_cabang read with advanced filtering, organizational structure, sorting, and pagination
        - Added profile_cabang single retrieval with multiple filter options
        - Added leadership structure management (ketua, sekretaris, bendahara)
        - Added organizational profile management (visi, misi, program)
        - Added SK (Surat Keputusan) document management with file attachment
        - Redis caching for profile_cabang operations
        - Non-destructive merge with cabang.js (1.4.0)
        - Access control based on user level and module permissions (module ID 14)
        - Leadership team with link to user profiles
    - version: 1.4.0
      date: 2025-10-29
      changes:
        - Added complete Cabang (Branch) Management CRUD endpoints
        - Added cabang geographic support
    - version: 1.3.0
      date: 2025-10-29
      changes:
        - Added complete Profile Management CRUD endpoints
    - version: 1.2.0
      date: 2025-10-29
      changes:
        - Added complete Users CRUD endpoints
        - Added Excel import functionality
    - version: 1.1.0
      date: 2025-10-29
      changes:
        - Added Google OAuth authentication

servers:
  - url: http://localhost:5000/api
    description: Development Server
    variables:
      port:
        default: '5000'
  - url: https://api.ppbi.id/api
    description: Production Server

tags:
  - name: Authentication
    description: Endpoints untuk autentikasi pengguna
  - name: Token Management
    description: Endpoints untuk manajemen token JWT
  - name: OAuth
    description: Endpoints untuk autentikasi OAuth (Google)
  - name: Users
    description: Endpoints untuk manajemen data pengguna (CRUD)
  - name: Users Import
    description: Endpoints untuk import bulk users dari Excel
  - name: Profile
    description: Endpoints untuk manajemen profil user yang detail
  - name: Cabang (Branch)
    description: Endpoints untuk manajemen cabang/branch di berbagai lokasi
  - name: Profile Cabang
    description: Endpoints untuk manajemen profil detail cabang termasuk struktur organisasi dan dokumen

paths:
  /auth/google:
    get:
      tags:
        - OAuth
      summary: Redirect ke Google OAuth
      operationId: googleLogin
      responses:
        '302':
          description: Redirect ke Google OAuth authorization page
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/google/callback:
    get:
      tags:
        - OAuth
      summary: Google OAuth Callback
      operationId: googleCallback
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: string
      responses:
        '302':
          description: Redirect ke frontend dengan JWT token
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register pengguna baru
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: User berhasil didaftarkan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Validasi input gagal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login pengguna
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Validasi atau autentikasi gagal
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationError'
                  - $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout pengguna
      operationId: logout
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/create:
    post:
      tags:
        - Token Management
      summary: Buat token baru
      operationId: createToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
      responses:
        '200':
          description: Token berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/refresh:
    post:
      tags:
        - Token Management
      summary: Refresh token
      operationId: refreshToken
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
      responses:
        '200':
          description: Token berhasil di-refresh
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/check:
    get:
      tags:
        - Token Management
      summary: Validasi token
      operationId: checkToken
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token masih aktif
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/delete:
    delete:
      tags:
        - Token Management
      summary: Hapus/invalidate token
      operationId: deleteToken
      security:
        - BearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTokenRequest'
      responses:
        '200':
          description: Token berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Token tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users:
    get:
      tags:
        - Users
      summary: Daftar pengguna dengan filter dan pagination
      operationId: listUsers
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: order_by
          in: query
          schema:
            type: string
        - name: id_user
          in: query
          schema:
            type: integer
        - name: username
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Daftar pengguna berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Users
      summary: Buat pengguna baru
      operationId: createUser
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          description: User berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          description: Validasi gagal
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationError'
                  - $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/{id}:
    put:
      tags:
        - Users
      summary: Update pengguna
      operationId: updateUser
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Users
      summary: Hapus pengguna
      operationId: deleteUser
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/single:
    get:
      tags:
        - Users
      summary: Ambil data pengguna single
      operationId: getSingleUser
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Data pengguna berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleUserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/import/preview:
    post:
      tags:
        - Users Import
      summary: Preview Excel sebelum import
      operationId: previewExcelImport
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Preview file berhasil dibaca
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewExcelResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/import/excel:
    post:
      tags:
        - Users Import
      summary: Import users dari Excel
      operationId: importExcelUsers
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Import berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportExcelResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/import/download-template:
    get:
      tags:
        - Users Import
      summary: Download template Excel
      operationId: downloadExcelTemplate
      responses:
        '200':
          description: Template file berhasil didownload
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        '500':
          $ref: '#/components/responses/InternalServerError'

  /profile:
    get:
      tags:
        - Profile
      summary: Daftar profil dengan filter dan pagination
      operationId: listProfiles
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Daftar profil berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Profile
      summary: Buat profil baru
      operationId: createProfile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
      responses:
        '200':
          description: Profil berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /profile/{id}:
    put:
      tags:
        - Profile
      summary: Update profil
      operationId: updateProfile
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: Profil berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Profile
      summary: Hapus profil
      operationId: deleteProfile
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Profil berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /profile/single:
    get:
      tags:
        - Profile
      summary: Ambil data profil single
      operationId: getSingleProfile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Data profil berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleProfileResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/cabang:
    get:
      tags:
        - Cabang (Branch)
      summary: Daftar cabang dengan filter dan pagination
      operationId: listCabang
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Daftar cabang berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CabangListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Cabang (Branch)
      summary: Buat cabang baru
      operationId: createCabang
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCabangRequest'
      responses:
        '200':
          description: Cabang berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCabangResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/cabang/{id}:
    put:
      tags:
        - Cabang (Branch)
      summary: Update cabang
      operationId: updateCabang
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCabangRequest'
      responses:
        '200':
          description: Cabang berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Cabang (Branch)
      summary: Hapus cabang
      operationId: deleteCabang
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cabang berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/cabang/single:
    get:
      tags:
        - Cabang (Branch)
      summary: Ambil data cabang single
      operationId: getSingleCabang
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Data cabang berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCabangResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/profile-cabang:
    get:
      tags:
        - Profile Cabang
      summary: Daftar profil cabang dengan filter dan pagination
      description: Mengambil daftar profil detail cabang dengan dukungan filter cabang, leadership team, visi-misi, sorting, pagination, dan Redis cache
      operationId: listProfileCabang
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: Nomor halaman (default 1)
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: Jumlah data per halaman (default 10)
        - name: order_by
          in: query
          schema:
            type: string
            default: created_at ASC
          description: Urutan sorting
        - name: ids_profile_cabang
          in: query
          schema:
            type: string
          description: Filter by profile ID (IN query, comma-separated)
        - name: ids_cabang
          in: query
          schema:
            type: string
          description: Filter by cabang ID (IN query)
        - name: cabang
          in: query
          schema:
            type: string
          description: Filter by cabang name (LIKE query)
        - name: ids_provinsi
          in: query
          schema:
            type: string
          description: Filter by provinsi ID (IN query)
        - name: provinsi
          in: query
          schema:
            type: string
          description: Filter by provinsi name (LIKE query)
        - name: pulau
          in: query
          schema:
            type: string
          description: Filter by pulau name
        - name: ids_kabkota
          in: query
          schema:
            type: string
          description: Filter by kabkota ID (IN query)
        - name: kabkota
          in: query
          schema:
            type: string
          description: Filter by kabkota name (LIKE query)
        - name: id_profile_ketua
          in: query
          schema:
            type: string
          description: Filter by ketua profile ID (IN query)
        - name: ketua
          in: query
          schema:
            type: string
          description: Filter by ketua name (LIKE query)
      responses:
        '200':
          description: Daftar profil cabang berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileCabangListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Profile Cabang
      summary: Buat profil cabang baru
      description: Membuat profil detail cabang dengan struktur organisasi, visi-misi, dan dokumen SK
      operationId: createProfileCabang
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileCabangRequest'
      responses:
        '200':
          description: Profil cabang berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileCabangResponse'
        '400':
          description: Validasi gagal
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationError'
                  - $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/profile-cabang/{id}:
    put:
      tags:
        - Profile Cabang
      summary: Update profil cabang
      description: Mengubah data profil cabang (semua field opsional)
      operationId: updateProfileCabang
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID profil cabang yang akan diupdate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileCabangRequest'
      responses:
        '200':
          description: Profil cabang berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Validasi gagal atau tidak ada perubahan
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationError'
                  - $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Profil cabang tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Profile Cabang
      summary: Hapus profil cabang
      description: Menghapus profil cabang dari sistem
      operationId: deleteProfileCabang
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID profil cabang yang akan dihapus
      responses:
        '200':
          description: Profil cabang berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Profil cabang tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/profile-cabang/single:
    get:
      tags:
        - Profile Cabang
      summary: Ambil data profil cabang single
      description: Mengambil data satu profil cabang dengan filter spesifik dan Redis cache
      operationId: getSingleProfileCabang
      security:
        - BearerAuth: []
      parameters:
        - name: ids_profile_cabang
          in: query
          schema:
            type: integer
          description: Filter by profile ID
        - name: ids_cabang
          in: query
          schema:
            type: integer
          description: Filter by cabang ID
        - name: cabang
          in: query
          schema:
            type: string
          description: Filter by cabang name (LIKE query)
        - name: ids_provinsi
          in: query
          schema:
            type: integer
          description: Filter by provinsi ID
        - name: provinsi
          in: query
          schema:
            type: string
          description: Filter by provinsi name (LIKE query)
        - name: ids_kabkota
          in: query
          schema:
            type: integer
          description: Filter by kabkota ID
        - name: kabkota
          in: query
          schema:
            type: string
          description: Filter by kabkota name (LIKE query)
        - name: id_profile_ketua
          in: query
          schema:
            type: integer
          description: Filter by ketua profile ID
        - name: ketua
          in: query
          schema:
            type: string
          description: Filter by ketua name (LIKE query)
      responses:
        '200':
          description: Data profil cabang berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleProfileCabangResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - username
        - password
        - confirm_password
      properties:
        username:
          type: string
          minLength: 4
          maxLength: 20
          example: john_doe
        password:
          type: string
          minLength: 8
          example: Secure@Pass123
        confirm_password:
          type: string
          example: Secure@Pass123
        reset:
          type: string
          enum: [YA, TIDAK]
          default: TIDAK

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: john_doe
        password:
          type: string
          example: Secure@Pass123

    CreateTokenRequest:
      type: object
      required:
        - payload
      properties:
        payload:
          type: object
          additionalProperties: true

    DeleteTokenRequest:
      type: object
      properties:
        keterangan:
          type: string
          default: LOGOUT

    CreateUserRequest:
      type: object
      required:
        - ids_grup
        - username
        - password
        - confirm_password
      properties:
        ids_grup:
          type: integer
          example: 1
        username:
          type: string
          minLength: 3
          maxLength: 50
          example: newuser
        password:
          type: string
          minLength: 8
          example: SecurePass@123
        confirm_password:
          type: string
          example: SecurePass@123
        reset:
          type: string
          enum: [YA, TIDAK]
          default: TIDAK

    UpdateUserRequest:
      type: object
      properties:
        ids_grup:
          type: integer
        username:
          type: string
          minLength: 3
          maxLength: 50
        password:
          type: string
          minLength: 8
        confirm_password:
          type: string

    CreateProfileRequest:
      type: object
      required:
        - nama_lengkap
        - jenis_kelamin
      properties:
        nama_lengkap:
          type: string
          minLength: 3
          maxLength: 255
          example: John Doe
        jenis_kelamin:
          type: string
          enum: [LAKI-LAKI, PEREMPUAN]
          example: LAKI-LAKI
        ids_kelurahan:
          type: integer
          nullable: true
        rw:
          type: string
          maxLength: 5
          nullable: true
        rt:
          type: string
          maxLength: 5
          nullable: true
        alamat:
          type: string
          nullable: true
        nmr_tlpn:
          type: string
          minLength: 10
          maxLength: 20
          nullable: true
        foto:
          type: string
          nullable: true

    UpdateProfileRequest:
      type: object
      properties:
        nama_lengkap:
          type: string
          minLength: 3
          maxLength: 255
        jenis_kelamin:
          type: string
          enum: [LAKI-LAKI, PEREMPUAN]
        ids_kelurahan:
          type: integer
          nullable: true
        rw:
          type: string
          maxLength: 5
          nullable: true
        rt:
          type: string
          maxLength: 5
          nullable: true
        alamat:
          type: string
          nullable: true
        nmr_tlpn:
          type: string
          minLength: 10
          maxLength: 20
          nullable: true
        foto:
          type: string
          nullable: true

    CreateCabangRequest:
      type: object
      required:
        - cabang
        - ids_kabkota
        - alamat
        - status
      properties:
        cabang:
          type: string
          example: Cabang Jakarta Pusat
        ids_kabkota:
          type: integer
          example: 101
        alamat:
          type: string
          example: Jl. Merdeka No. 1, Jakarta Pusat
        status:
          type: string
          enum: [YA, TIDAK]
          example: YA

    UpdateCabangRequest:
      type: object
      properties:
        cabang:
          type: string
        ids_kabkota:
          type: integer
        alamat:
          type: string
        status:
          type: string
          enum: [YA, TIDAK]

    CreateProfileCabangRequest:
      type: object
      required:
        - ids_cabang
        - profile
        - visi
        - misi
        - program
        - nomor_sk
        - masa_aktif
        - file_sk
      properties:
        ids_cabang:
          type: integer
          description: ID cabang (wajib, harus integer positif)
          example: 1
        ketua:
          type: integer
          nullable: true
          description: ID user ketua cabang (opsional, harus integer jika diisi)
          example: 10
        sekretaris:
          type: integer
          nullable: true
          description: ID user sekretaris cabang (opsional, harus integer jika diisi)
          example: 11
        bendahara:
          type: integer
          nullable: true
          description: ID user bendahara cabang (opsional, harus integer jika diisi)
          example: 12
        profile:
          type: string
          description: Profil/deskripsi cabang (wajib, text type)
          example: Cabang PPBI yang berlokasi di Jakarta Pusat dengan fokus pada pengembangan bonsai tradisional
        visi:
          type: string
          description: Visi cabang (wajib, text type)
          example: Menjadi pusat pembelajaran bonsai terbaik di Indonesia
        misi:
          type: string
          description: Misi cabang (wajib, text type)
          example: Mengembangkan seni bonsai melalui edukasi dan pelatihan
        program:
          type: string
          description: Program cabang (wajib, text type)
          example: Workshop bulanan, kompetisi bonsai, konsultasi gratis
        nomor_sk:
          type: string
          maxLength: 255
          description: Nomor Surat Keputusan (wajib, max 255 karakter)
          example: SK/PPBI/JAKARTA/001/2025
        masa_aktif:
          type: string
          format: date
          description: Tanggal mulai berlaku (wajib, format YYYY-MM-DD)
          example: '2025-01-01'
        file_sk:
          type: string
          description: URL file SK atau # untuk no file (wajib, harus URL http/https atau #)
          example: https://example.com/documents/sk_ppbi_jakarta.pdf

    UpdateProfileCabangRequest:
      type: object
      properties:
        ids_cabang:
          type: integer
          description: ID cabang (opsional, harus integer jika diisi)
          example: 1
        ketua:
          type: integer
          nullable: true
          description: ID user ketua cabang (opsional)
          example: 10
        sekretaris:
          type: integer
          nullable: true
          description: ID user sekretaris cabang (opsional)
          example: 11
        bendahara:
          type: integer
          nullable: true
          description: ID user bendahara cabang (opsional)
          example: 12
        profile:
          type: string
          description: Profil/deskripsi cabang (opsional)
          example: Cabang PPBI Jakarta Pusat - Updated
        visi:
          type: string
          description: Visi cabang (opsional)
          example: Menjadi pusat bonsai terdepan
        misi:
          type: string
          description: Misi cabang (opsional)
          example: Edukasi berkelanjutan tentang seni bonsai
        program:
          type: string
          description: Program cabang (opsional)
          example: Workshop, kompetisi, konsultasi
        nomor_sk:
          type: string
          maxLength: 255
          description: Nomor SK (opsional)
          example: SK/PPBI/JAKARTA/001/2025
        masa_aktif:
          type: string
          format: date
          description: Tanggal berlaku (opsional, format YYYY-MM-DD)
          example: '2025-01-01'
        file_sk:
          type: string
          description: URL file SK atau # (opsional)
          example: https://example.com/documents/sk_ppbi_jakarta_updated.pdf

    ProfileCabangData:
      type: object
      properties:
        ids_profile_cabang:
          type: integer
          description: ID profil cabang
          example: 1
        ids_cabang:
          type: integer
          description: ID cabang
          example: 1
        cabang:
          type: string
          description: Nama cabang
          example: Cabang Jakarta Pusat
        ids_provinsi:
          type: integer
          nullable: true
          description: ID provinsi
          example: 1
        provinsi:
          type: string
          nullable: true
          description: Nama provinsi
          example: DKI Jakarta
        pulau:
          type: string
          nullable: true
          description: Nama pulau
          example: Jawa
        ids_kabkota:
          type: integer
          nullable: true
          description: ID kabupaten/kota
          example: 101
        kabkota:
          type: string
          nullable: true
          description: Nama kabupaten/kota
          example: Jakarta Pusat
        id_profile_ketua:
          type: integer
          nullable: true
          description: ID profile user ketua
          example: 10
        ketua:
          type: string
          nullable: true
          description: Nama ketua cabang
          example: Budi Santoso
        sekretaris:
          type: string
          nullable: true
          description: Nama sekretaris cabang
          example: Siti Nurhaliza
        bendahara:
          type: string
          nullable: true
          description: Nama bendahara cabang
          example: Ahmad Wijaya
        profile:
          type: string
          description: Profil/deskripsi cabang
          example: Cabang PPBI Jakarta dengan fokus pengembangan bonsai
        visi:
          type: string
          description: Visi cabang
          example: Menjadi pusat pembelajaran bonsai terbaik
        misi:
          type: string
          description: Misi cabang
          example: Mengembangkan seni bonsai melalui edukasi
        program:
          type: string
          description: Program cabang
          example: Workshop bulanan, kompetisi, konsultasi
        nomor_sk:
          type: string
          description: Nomor SK
          example: SK/PPBI/JAKARTA/001/2025
        masa_aktif:
          type: string
          format: date
          description: Tanggal berlaku SK
          example: '2025-01-01'
        file_sk:
          type: string
          nullable: true
          description: URL file SK atau #
          example: https://example.com/documents/sk_ppbi_jakarta.pdf
        created_by:
          type: integer
          description: User ID yang membuat profil
          example: 1
        created_at:
          type: string
          format: date-time
          description: Waktu pembuatan
          example: '2025-10-29T00:00:00Z'
        updated_by:
          type: integer
          nullable: true
          description: User ID yang terakhir update
          example: 2
        updated_at:
          type: string
          format: date-time
          nullable: true
          description: Waktu update terakhir
          example: null

    CabangData:
      type: object
      properties:
        ids_cabang:
          type: integer
          example: 1
        cabang:
          type: string
          example: Cabang Jakarta Pusat
        alamat:
          type: string
          example: Jl. Merdeka No. 1
        status:
          type: string
          enum: [YA, TIDAK]
          example: YA

    ProfileData:
      type: object
      properties:
        id_profile:
          type: integer
          example: 1
        username:
          type: string
          example: john_doe
        nama_lengkap:
          type: string
          example: John Doe

    UserData:
      type: object
      properties:
        id_user:
          type: integer
          example: 1
        username:
          type: string
          example: john_doe

    RegisterResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
        data:
          type: object
          properties:
            id_user:
              type: integer
              example: 123

    LoginResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
        data:
          type: object
          properties:
            token:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

    TokenResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            token:
              type: string

    CreateUserResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
        data:
          type: object
          properties:
            id_user:
              type: integer

    CreateProfileResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            id_profile:
              type: integer

    CreateCabangResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            ids_cabang:
              type: integer

    CreateProfileCabangResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
          example: Data added successfully.
        data:
          type: object
          properties:
            ids_profile_cabang:
              type: integer
              example: 1

    UserListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserData'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleUserResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/UserData'

    ProfileListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ProfileData'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleProfileResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/ProfileData'

    CabangListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CabangData'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleCabangResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/CabangData'

    ProfileCabangListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
          example: ''
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ProfileCabangData'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleProfileCabangResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
          example: ''
        data:
          $ref: '#/components/schemas/ProfileCabangData'

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        total:
          type: integer
          example: 50
        last_page:
          type: integer
          example: 5

    PreviewExcelResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    ImportExcelResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    SuccessResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          enum: [success]
        message:
          type: string
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        status:
          type: string
          enum: [error]
        message:
          oneOf:
            - type: string
            - type: object

    ValidationError:
      type: object
      properties:
        code:
          type: integer
          example: 400
        status:
          type: string
          enum: [error]
        message:
          type: object
          additionalProperties:
            type: string
          example:
            ids_cabang: ids cabang tidak boleh kosong.
            profile: profile tidak boleh kosong.
            visi: visi tidak boleh kosong.
            misi: misi tidak boleh kosong.
            program: program tidak boleh kosong.
            nomor_sk: nomor sk tidak boleh kosong.
            masa_aktif: masa aktif harus format tanggal YYYY-MM-DD.
            file_sk: file sk harus berupa URL (http/https) atau #.

  responses:
    BadRequest:
      description: Request tidak valid atau validasi gagal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Token tidak valid atau tidak diberikan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource tidak ditemukan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Terjadi kesalahan pada server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token dari endpoint login atau Google OAuth callback

security:
  - BearerAuth: []
