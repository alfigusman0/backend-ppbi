openapi: 3.0.3
info:
  title: API PPBI - Complete Service (All Modules)
  version: 1.6.0
  description: |
    Dokumentasi lengkap Complete API Service untuk PPBI (Persatuan Penggemar Bonsai Indonesia).
    Sistem mencakup autentikasi, manajemen users, profil user, cabang, profil cabang, dan manajemen data geografis (provinsi, kabupaten/kota).
  contact:
    name: API Support
    email: support@ppbi.local
  x-changelog:
    - version: 1.6.0
      date: 2025-10-29
      changes:
        - Added complete Geographic Management CRUD endpoints (Provinsi & Kabupaten/Kota)
        - Added provinsi read with filtering, sorting, pagination, and Redis cache
        - Added provinsi single retrieval with multiple filter options
        - Added provinsi validation with enum support for pulau (10 major islands)
        - Added kabupaten/kota read with geographic hierarchy support and view-based queries
        - Added kabupaten/kota single retrieval with combined provinsi data
        - Redis caching for geographic operations
        - Non-destructive merge with profile_cabang.js (1.5.0)
        - Access control based on user level and module permissions (module 15 for provinsi, module 8 for kabkota)
        - Geographic reference support for entire system
    - version: 1.5.0
      date: 2025-10-29
      changes:
        - Added complete Profile Cabang Management CRUD endpoints
        - Added organizational structure and visi-misi management
    - version: 1.4.0
      date: 2025-10-29
      changes:
        - Added complete Cabang (Branch) Management CRUD endpoints
    - version: 1.3.0
      date: 2025-10-29
      changes:
        - Added complete Profile Management CRUD endpoints
    - version: 1.2.0
      date: 2025-10-29
      changes:
        - Added complete Users CRUD endpoints
    - version: 1.1.0
      date: 2025-10-29
      changes:
        - Added Google OAuth authentication

servers:
  - url: http://localhost:5000/api
    description: Development Server
    variables:
      port:
        default: '5000'
  - url: https://api.ppbi.id/api
    description: Production Server

tags:
  - name: Authentication
    description: Endpoints untuk autentikasi pengguna
  - name: Token Management
    description: Endpoints untuk manajemen token JWT
  - name: OAuth
    description: Endpoints untuk autentikasi OAuth (Google)
  - name: Users
    description: Endpoints untuk manajemen data pengguna (CRUD)
  - name: Users Import
    description: Endpoints untuk import bulk users dari Excel
  - name: Profile
    description: Endpoints untuk manajemen profil user yang detail
  - name: Cabang (Branch)
    description: Endpoints untuk manajemen cabang/branch di berbagai lokasi
  - name: Profile Cabang
    description: Endpoints untuk manajemen profil detail cabang
  - name: Geographic
    description: Endpoints untuk manajemen data geografis (provinsi, kabupaten/kota)

paths:
  /auth/google:
    get:
      tags:
        - OAuth
      summary: Redirect ke Google OAuth
      operationId: googleLogin
      responses:
        '302':
          description: Redirect ke Google OAuth
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/google/callback:
    get:
      tags:
        - OAuth
      summary: Google OAuth Callback
      operationId: googleCallback
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect dengan JWT token
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register pengguna baru
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: User berhasil didaftarkan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login pengguna
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout pengguna
      operationId: logout
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/create:
    post:
      tags:
        - Token Management
      summary: Buat token baru
      operationId: createToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
      responses:
        '200':
          description: Token berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/refresh:
    post:
      tags:
        - Token Management
      summary: Refresh token
      operationId: refreshToken
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
      responses:
        '200':
          description: Token berhasil di-refresh
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/check:
    get:
      tags:
        - Token Management
      summary: Validasi token
      operationId: checkToken
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token masih aktif
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/delete:
    delete:
      tags:
        - Token Management
      summary: Hapus/invalidate token
      operationId: deleteToken
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users:
    get:
      tags:
        - Users
      summary: Daftar pengguna
      operationId: listUsers
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Daftar pengguna berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Users
      summary: Buat pengguna baru
      operationId: createUser
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          description: User berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/{id}:
    put:
      tags:
        - Users
      summary: Update pengguna
      operationId: updateUser
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Users
      summary: Hapus pengguna
      operationId: deleteUser
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /profile:
    get:
      tags:
        - Profile
      summary: Daftar profil
      operationId: listProfiles
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Daftar profil berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Profile
      summary: Buat profil baru
      operationId: createProfile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
      responses:
        '200':
          description: Profil berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /profile/{id}:
    put:
      tags:
        - Profile
      summary: Update profil
      operationId: updateProfile
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: Profil berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Profile
      summary: Hapus profil
      operationId: deleteProfile
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Profil berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/cabang:
    get:
      tags:
        - Cabang (Branch)
      summary: Daftar cabang
      operationId: listCabang
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Daftar cabang berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CabangListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Cabang (Branch)
      summary: Buat cabang baru
      operationId: createCabang
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCabangRequest'
      responses:
        '200':
          description: Cabang berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCabangResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/cabang/{id}:
    put:
      tags:
        - Cabang (Branch)
      summary: Update cabang
      operationId: updateCabang
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCabangRequest'
      responses:
        '200':
          description: Cabang berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Cabang (Branch)
      summary: Hapus cabang
      operationId: deleteCabang
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cabang berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/profile-cabang:
    get:
      tags:
        - Profile Cabang
      summary: Daftar profil cabang
      operationId: listProfileCabang
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Daftar profil cabang berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileCabangListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Profile Cabang
      summary: Buat profil cabang baru
      operationId: createProfileCabang
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileCabangRequest'
      responses:
        '200':
          description: Profil cabang berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileCabangResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/profile-cabang/{id}:
    put:
      tags:
        - Profile Cabang
      summary: Update profil cabang
      operationId: updateProfileCabang
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileCabangRequest'
      responses:
        '200':
          description: Profil cabang berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Profile Cabang
      summary: Hapus profil cabang
      operationId: deleteProfileCabang
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Profil cabang berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/provinsi:
    get:
      tags:
        - Geographic
      summary: Daftar provinsi dengan filtering
      description: Mengambil daftar provinsi dengan dukungan filter, sorting, pagination, dan Redis cache
      operationId: listProvinsi
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: order_by
          in: query
          schema:
            type: string
            default: created_at ASC
        - name: ids_provinsi
          in: query
          schema:
            type: string
          description: Filter by provinsi ID (IN query, comma-separated)
        - name: kode_provinsi
          in: query
          schema:
            type: string
          description: Filter by kode provinsi (IN query, max 5 karakter)
        - name: provinsi
          in: query
          schema:
            type: string
          description: Filter by provinsi name (LIKE query)
        - name: pulau
          in: query
          schema:
            type: string
          description: Filter by pulau name (enum or LIKE query)
        - name: status
          in: query
          schema:
            type: string
            enum: [YA, TIDAK]
          description: Filter by status
      responses:
        '200':
          description: Daftar provinsi berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinsiListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Geographic
      summary: Buat provinsi baru
      description: Membuat data provinsi baru dengan validasi enum pulau
      operationId: createProvinsi
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProvinsiRequest'
      responses:
        '200':
          description: Provinsi berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProvinsiResponse'
        '400':
          description: Validasi gagal
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationError'
                  - $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/provinsi/{id}:
    put:
      tags:
        - Geographic
      summary: Update provinsi
      description: Mengubah data provinsi (semua field opsional)
      operationId: updateProvinsi
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProvinsiRequest'
      responses:
        '200':
          description: Provinsi berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Validasi gagal atau tidak ada perubahan
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationError'
                  - $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provinsi tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Geographic
      summary: Hapus provinsi
      description: Menghapus data provinsi dari sistem
      operationId: deleteProvinsi
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Provinsi berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provinsi tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/provinsi/single:
    get:
      tags:
        - Geographic
      summary: Ambil data provinsi single
      description: Mengambil data satu provinsi dengan filter spesifik dan Redis cache
      operationId: getSingleProvinsi
      security:
        - BearerAuth: []
      parameters:
        - name: ids_provinsi
          in: query
          schema:
            type: integer
        - name: kode_provinsi
          in: query
          schema:
            type: string
        - name: provinsi
          in: query
          schema:
            type: string
        - name: pulau
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [YA, TIDAK]
      responses:
        '200':
          description: Data provinsi berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleProvinsiResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/kabupaten-kota:
    get:
      tags:
        - Geographic
      summary: Daftar kabupaten/kota dengan filtering
      description: Mengambil daftar kabupaten/kota dengan dukungan filter geographic, sorting, pagination, dan Redis cache
      operationId: listKabKota
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: order_by
          in: query
          schema:
            type: string
            default: created_at ASC
        - name: ids_provinsi
          in: query
          schema:
            type: string
          description: Filter by provinsi ID (IN query)
        - name: kode_provinsi
          in: query
          schema:
            type: string
          description: Filter by kode provinsi (IN query)
        - name: provinsi
          in: query
          schema:
            type: string
          description: Filter by provinsi name (LIKE query)
        - name: pulau
          in: query
          schema:
            type: string
          description: Filter by pulau name (IN query)
        - name: ids_kabkota
          in: query
          schema:
            type: string
          description: Filter by kabkota ID (IN query)
        - name: kode_kabkota
          in: query
          schema:
            type: string
          description: Filter by kode kabkota (IN query)
        - name: kabkota
          in: query
          schema:
            type: string
          description: Filter by kabkota name (LIKE query)
        - name: status
          in: query
          schema:
            type: string
            enum: [YA, TIDAK]
          description: Filter by status
      responses:
        '200':
          description: Daftar kabupaten/kota berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KabKotaListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Geographic
      summary: Buat kabupaten/kota baru
      description: Membuat data kabupaten/kota baru dengan referensi provinsi
      operationId: createKabKota
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKabKotaRequest'
      responses:
        '200':
          description: Kabupaten/Kota berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKabKotaResponse'
        '400':
          description: Validasi gagal
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationError'
                  - $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/kabupaten-kota/{id}:
    put:
      tags:
        - Geographic
      summary: Update kabupaten/kota
      description: Mengubah data kabupaten/kota (semua field opsional)
      operationId: updateKabKota
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKabKotaRequest'
      responses:
        '200':
          description: Kabupaten/Kota berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Validasi gagal
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationError'
                  - $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Kabupaten/Kota tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Geographic
      summary: Hapus kabupaten/kota
      description: Menghapus data kabupaten/kota dari sistem
      operationId: deleteKabKota
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Kabupaten/Kota berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Kabupaten/Kota tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/kabupaten-kota/single:
    get:
      tags:
        - Geographic
      summary: Ambil data kabupaten/kota single
      description: Mengambil data satu kabupaten/kota dengan filter spesifik dan Redis cache
      operationId: getSingleKabKota
      security:
        - BearerAuth: []
      parameters:
        - name: ids_provinsi
          in: query
          schema:
            type: integer
        - name: kode_provinsi
          in: query
          schema:
            type: string
        - name: provinsi
          in: query
          schema:
            type: string
        - name: pulau
          in: query
          schema:
            type: string
        - name: ids_kabkota
          in: query
          schema:
            type: integer
        - name: kode_kabkota
          in: query
          schema:
            type: string
        - name: kabkota
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [YA, TIDAK]
      responses:
        '200':
          description: Data kabupaten/kota berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleKabKotaResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Data tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - username
        - password
        - confirm_password
      properties:
        username:
          type: string
          example: john_doe
        password:
          type: string
          example: Secure@Pass123
        confirm_password:
          type: string

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    CreateTokenRequest:
      type: object
      required:
        - payload
      properties:
        payload:
          type: object
          additionalProperties: true

    CreateUserRequest:
      type: object
      required:
        - ids_grup
        - username
        - password
        - confirm_password
      properties:
        ids_grup:
          type: integer
        username:
          type: string
        password:
          type: string
        confirm_password:
          type: string

    UpdateUserRequest:
      type: object
      properties:
        ids_grup:
          type: integer
        username:
          type: string
        password:
          type: string
        confirm_password:
          type: string

    CreateProfileRequest:
      type: object
      required:
        - nama_lengkap
        - jenis_kelamin
      properties:
        nama_lengkap:
          type: string
        jenis_kelamin:
          type: string
          enum: [LAKI-LAKI, PEREMPUAN]

    UpdateProfileRequest:
      type: object
      properties:
        nama_lengkap:
          type: string
        jenis_kelamin:
          type: string
          enum: [LAKI-LAKI, PEREMPUAN]

    CreateCabangRequest:
      type: object
      required:
        - cabang
        - ids_kabkota
        - alamat
        - status
      properties:
        cabang:
          type: string
        ids_kabkota:
          type: integer
        alamat:
          type: string
        status:
          type: string
          enum: [YA, TIDAK]

    UpdateCabangRequest:
      type: object
      properties:
        cabang:
          type: string
        ids_kabkota:
          type: integer
        alamat:
          type: string
        status:
          type: string
          enum: [YA, TIDAK]

    CreateProfileCabangRequest:
      type: object
      required:
        - ids_cabang
        - profile
        - visi
        - misi
        - program
        - nomor_sk
        - masa_aktif
        - file_sk
      properties:
        ids_cabang:
          type: integer
        ketua:
          type: integer
          nullable: true
        sekretaris:
          type: integer
          nullable: true
        bendahara:
          type: integer
          nullable: true
        profile:
          type: string
        visi:
          type: string
        misi:
          type: string
        program:
          type: string
        nomor_sk:
          type: string
        masa_aktif:
          type: string
          format: date
        file_sk:
          type: string

    UpdateProfileCabangRequest:
      type: object
      properties:
        ids_cabang:
          type: integer
        ketua:
          type: integer
          nullable: true
        sekretaris:
          type: integer
          nullable: true
        bendahara:
          type: integer
          nullable: true
        profile:
          type: string
        visi:
          type: string
        misi:
          type: string
        program:
          type: string
        nomor_sk:
          type: string
        masa_aktif:
          type: string
          format: date
        file_sk:
          type: string

    CreateProvinsiRequest:
      type: object
      required:
        - kode_provinsi
        - provinsi
        - pulau
        - status
      properties:
        kode_provinsi:
          type: string
          maxLength: 5
          description: Kode provinsi (max 5 karakter, wajib)
          example: '11'
        provinsi:
          type: string
          description: Nama provinsi (wajib)
          example: DKI Jakarta
        pulau:
          type: string
          enum:
            [PAPUA, KALIMANTAN, SUMATERA, SULAWESI, JAWA, TIMOR, HALMAHERA, SERAM, SUMBAWA, FLORES]
          description: Nama pulau (enum, wajib)
          example: JAWA
        status:
          type: string
          enum: [YA, TIDAK]
          description: Status aktif (wajib)
          example: YA

    UpdateProvinsiRequest:
      type: object
      properties:
        kode_provinsi:
          type: string
          maxLength: 5
          description: Kode provinsi (opsional)
        provinsi:
          type: string
          description: Nama provinsi (opsional)
        pulau:
          type: string
          enum:
            [PAPUA, KALIMANTAN, SUMATERA, SULAWESI, JAWA, TIMOR, HALMAHERA, SERAM, SUMBAWA, FLORES]
          description: Nama pulau (opsional)
        status:
          type: string
          enum: [YA, TIDAK]
          description: Status (opsional)

    CreateKabKotaRequest:
      type: object
      required:
        - kode_kabkota
        - ids_provinsi
        - kabkota
        - status
      properties:
        kode_kabkota:
          type: string
          description: Kode kabupaten/kota (wajib, unique)
          example: '1101'
        ids_provinsi:
          type: integer
          description: ID provinsi referensi (wajib)
          example: 1
        kabkota:
          type: string
          description: Nama kabupaten/kota (wajib)
          example: Jakarta Pusat
        status:
          type: string
          enum: [YA, TIDAK]
          description: Status aktif (wajib)
          example: YA

    UpdateKabKotaRequest:
      type: object
      properties:
        kode_kabkota:
          type: string
          description: Kode kabupaten/kota (opsional)
        ids_provinsi:
          type: integer
          description: ID provinsi (opsional)
        kabkota:
          type: string
          description: Nama kabupaten/kota (opsional)
        status:
          type: string
          enum: [YA, TIDAK]
          description: Status (opsional)

    ProvinsiData:
      type: object
      properties:
        ids_provinsi:
          type: integer
          example: 1
        kode_provinsi:
          type: string
          example: '11'
        provinsi:
          type: string
          example: DKI Jakarta
        pulau:
          type: string
          example: JAWA
        status:
          type: string
          enum: [YA, TIDAK]
          example: YA
        created_by:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          nullable: true

    KabKotaData:
      type: object
      properties:
        ids_kabkota:
          type: integer
          example: 101
        kode_kabkota:
          type: string
          example: '1101'
        ids_provinsi:
          type: integer
          example: 1
        kode_provinsi:
          type: string
          example: '11'
        provinsi:
          type: string
          example: DKI Jakarta
        pulau:
          type: string
          example: JAWA
        kabkota:
          type: string
          example: Jakarta Pusat
        status:
          type: string
          enum: [YA, TIDAK]
          example: YA
        created_by:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          nullable: true

    RegisterResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
        data:
          type: object

    LoginResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            token:
              type: string

    TokenResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            token:
              type: string

    CreateUserResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            id_user:
              type: integer

    CreateProfileResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            id_profile:
              type: integer

    CreateCabangResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            ids_cabang:
              type: integer

    CreateProfileCabangResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            ids_profile_cabang:
              type: integer

    CreateProvinsiResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
          example: Data added successfully.
        data:
          type: object
          properties:
            ids_provinsi:
              type: integer
              example: 1

    CreateKabKotaResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
          example: Data added successfully.
        data:
          type: object
          properties:
            ids_kabkota:
              type: integer
              example: 101

    UserListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    ProfileListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    CabangListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    ProfileCabangListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    ProvinsiListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
          example: ''
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ProvinsiData'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleProvinsiResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
          example: ''
        data:
          $ref: '#/components/schemas/ProvinsiData'

    KabKotaListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
          example: ''
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/KabKotaData'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleKabKotaResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
          example: ''
        data:
          $ref: '#/components/schemas/KabKotaData'

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        total:
          type: integer
          example: 50
        last_page:
          type: integer
          example: 5

    SuccessResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          enum: [success]
        message:
          type: string
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        status:
          type: string
          enum: [error]
        message:
          oneOf:
            - type: string
            - type: object

    ValidationError:
      type: object
      properties:
        code:
          type: integer
          example: 400
        status:
          type: string
          enum: [error]
        message:
          type: object
          additionalProperties:
            type: string
          example:
            kode_provinsi: kode provinsi tidak boleh kosong.
            provinsi: nama provinsi tidak boleh kosong.
            pulau: pulau tidak valid.
            status: status tidak valid.

  responses:
    BadRequest:
      description: Request tidak valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Token tidak valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token dari endpoint login atau Google OAuth callback

security:
  - BearerAuth: []
