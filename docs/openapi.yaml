openapi: 3.0.3
info:
  title: API PPBI - Complete Enterprise System
  version: 2.0.0
  description: |
    Dokumentasi lengkap Complete API Service untuk PPBI (Persatuan Penggemar Bonsai Indonesia).

    Sistem enterprise mencakup 8 modul utama:
    - Authentication & Token Management dengan Google OAuth
    - Users Management dengan Excel bulk import
    - Profile Management dengan data geografis
    - Cabang (Branch) Management multi-lokasi
    - Profile Cabang dengan struktur organisasi & SK
    - Geographic Management lengkap 4 tingkat (Provinsi, Kabupaten/Kota, Kecamatan, Kelurahan)

    Fitur enterprise: Redis caching, role-based access control, comprehensive validation, audit tracking.
  contact:
    name: API Support Team
    email: support@ppbi.id
  license:
    name: Proprietary
    url: https://ppbi.id/license
  x-changelog:
    - version: 2.0.0
      date: 2025-10-29
      changes:
        - FINAL COMPLETE - Added Kecamatan & Kelurahan geographic management
        - Complete 4-level geographic hierarchy with view-based queries
        - System production-ready dengan 8 modul terintegrasi penuh
    - version: 1.6.0
      changes:
        - Added Provinsi & Kabupaten/Kota management
    - version: 1.5.0
      changes:
        - Added Profile Cabang with organizational structure
    - version: 1.4.0
      changes:
        - Added Cabang management
    - version: 1.3.0
      changes:
        - Added Profile management
    - version: 1.2.0
      changes:
        - Added Users management with Excel import
    - version: 1.1.0
      changes:
        - Added Google OAuth authentication

servers:
  - url: http://localhost:5000/api
    description: Development Server
  - url: https://api.ppbi.id/api
    description: Production Server

tags:
  - name: Authentication
    description: Autentikasi pengguna dan OAuth
  - name: Token Management
    description: Manajemen JWT tokens
  - name: Users Management
    description: CRUD pengguna dengan bulk import
  - name: Profile Management
    description: Profil personal pengguna
  - name: Cabang Management
    description: Manajemen cabang/branch
  - name: Profile Cabang Management
    description: Profil detail cabang dengan struktur organisasi
  - name: Geographic - Provinsi
    description: Manajemen provinsi (Level 1)
  - name: Geographic - Kabupaten/Kota
    description: Manajemen kabupaten/kota (Level 2)
  - name: Geographic - Kecamatan
    description: Manajemen kecamatan (Level 3)
  - name: Geographic - Kelurahan
    description: Manajemen kelurahan (Level 4)

paths:
  # ==================== AUTHENTICATION ====================
  /auth/google:
    get:
      tags:
        - Authentication
      summary: Redirect ke Google OAuth
      description: Mengarahkan user ke halaman login Google untuk autentikasi
      operationId: googleLogin
      responses:
        '302':
          description: Redirect ke Google OAuth authorization page
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/google/callback:
    get:
      tags:
        - Authentication
      summary: Google OAuth Callback
      description: Callback endpoint setelah user login via Google
      operationId: googleCallback
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: Authorization code dari Google
      responses:
        '302':
          description: Redirect ke frontend dengan JWT token
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register pengguna baru
      description: Membuat akun pengguna baru dengan validasi input lengkap
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: User berhasil didaftarkan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login pengguna
      description: Melakukan login dengan username dan password
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout pengguna
      description: Mengeluarkan user dan menginvalidasi token
      operationId: logout
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== TOKEN MANAGEMENT ====================
  /auth/token/create:
    post:
      tags:
        - Token Management
      summary: Buat token baru
      description: Generate JWT token baru dengan payload custom
      operationId: createToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
      responses:
        '200':
          description: Token berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/refresh:
    post:
      tags:
        - Token Management
      summary: Refresh token
      description: Membuat token baru berdasarkan token aktif
      operationId: refreshToken
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
      responses:
        '200':
          description: Token berhasil di-refresh
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/check:
    get:
      tags:
        - Token Management
      summary: Validasi token
      description: Memeriksa apakah token masih valid dan aktif
      operationId: checkToken
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token masih aktif
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/token/delete:
    delete:
      tags:
        - Token Management
      summary: Hapus/invalidate token
      description: Menghapus atau menginvalidasi token
      operationId: deleteToken
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTokenRequest'
      responses:
        '200':
          description: Token berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== USERS MANAGEMENT ====================
  /users:
    get:
      tags:
        - Users Management
      summary: Daftar pengguna
      description: Mengambil daftar pengguna dengan filter, pagination, dan Redis cache
      operationId: listUsers
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OrderByParam'
        - name: id_user
          in: query
          schema:
            type: integer
        - name: username
          in: query
          schema:
            type: string
        - name: ids_level
          in: query
          schema:
            type: string
          description: Comma-separated IDs
        - name: ids_grup
          in: query
          schema:
            type: string
          description: Comma-separated IDs
      responses:
        '200':
          description: Daftar pengguna berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Users Management
      summary: Buat pengguna baru
      description: Membuat pengguna baru dengan validasi lengkap
      operationId: createUser
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          description: User berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/{id}:
    put:
      tags:
        - Users Management
      summary: Update pengguna
      description: Mengubah data pengguna yang ada
      operationId: updateUser
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Users Management
      summary: Hapus pengguna
      description: Menghapus pengguna dari sistem
      operationId: deleteUser
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      responses:
        '200':
          description: User berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/single:
    get:
      tags:
        - Users Management
      summary: Ambil data pengguna single
      description: Mengambil data satu pengguna dengan filter spesifik
      operationId: getSingleUser
      security:
        - BearerAuth: []
      parameters:
        - name: id_user
          in: query
          schema:
            type: integer
        - name: username
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Data pengguna berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleUserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/import/preview:
    post:
      tags:
        - Users Management
      summary: Preview Excel sebelum import
      description: Membaca dan memvalidasi file Excel sebelum import
      operationId: previewExcelImport
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: File Excel (.xlsx/.xls)
      responses:
        '200':
          description: Preview file berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewExcelResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/import/excel:
    post:
      tags:
        - Users Management
      summary: Import users dari Excel
      description: Melakukan bulk import data pengguna dari Excel
      operationId: importExcelUsers
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Import berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportExcelResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/import/download-template:
    get:
      tags:
        - Users Management
      summary: Download template Excel
      description: Download template file Excel untuk import users
      operationId: downloadExcelTemplate
      responses:
        '200':
          description: Template file berhasil didownload
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== PROFILE MANAGEMENT ====================
  /profile:
    get:
      tags:
        - Profile Management
      summary: Daftar profil
      description: Mengambil daftar profil dengan filter geographic dan pagination
      operationId: listProfiles
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OrderByParam'
        - name: id_profile
          in: query
          schema:
            type: string
        - name: username
          in: query
          schema:
            type: string
        - name: nama_lengkap
          in: query
          schema:
            type: string
        - name: jenis_kelamin
          in: query
          schema:
            type: string
            enum: [LAKI-LAKI, PEREMPUAN]
        - name: provinsi
          in: query
          schema:
            type: string
        - name: kabkota
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Daftar profil berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Profile Management
      summary: Buat profil baru
      description: Membuat profil pengguna baru dengan data geografis
      operationId: createProfile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
      responses:
        '200':
          description: Profil berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /profile/{id}:
    put:
      tags:
        - Profile Management
      summary: Update profil
      description: Mengubah data profil (semua field opsional)
      operationId: updateProfile
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: Profil berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Profile Management
      summary: Hapus profil
      operationId: deleteProfile
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      responses:
        '200':
          description: Profil berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /profile/single:
    get:
      tags:
        - Profile Management
      summary: Ambil profil single
      operationId: getSingleProfile
      security:
        - BearerAuth: []
      parameters:
        - name: id_profile
          in: query
          schema:
            type: integer
        - name: username
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Data profil berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleProfileResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== CABANG MANAGEMENT ====================
  /settings/cabang:
    get:
      tags:
        - Cabang Management
      summary: Daftar cabang
      description: Mengambil daftar cabang dengan filter geographic
      operationId: listCabang
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OrderByParam'
        - name: ids_cabang
          in: query
          schema:
            type: string
        - name: cabang
          in: query
          schema:
            type: string
        - name: provinsi
          in: query
          schema:
            type: string
        - name: kabkota
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [YA, TIDAK]
      responses:
        '200':
          description: Daftar cabang berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CabangListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Cabang Management
      summary: Buat cabang baru
      operationId: createCabang
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCabangRequest'
      responses:
        '200':
          description: Cabang berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCabangResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/cabang/{id}:
    put:
      tags:
        - Cabang Management
      summary: Update cabang
      operationId: updateCabang
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCabangRequest'
      responses:
        '200':
          description: Cabang berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Cabang Management
      summary: Hapus cabang
      operationId: deleteCabang
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      responses:
        '200':
          description: Cabang berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/cabang/single:
    get:
      tags:
        - Cabang Management
      summary: Ambil cabang single
      operationId: getSingleCabang
      security:
        - BearerAuth: []
      parameters:
        - name: ids_cabang
          in: query
          schema:
            type: integer
        - name: cabang
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Data cabang berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCabangResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== PROFILE CABANG MANAGEMENT ====================
  /settings/profile-cabang:
    get:
      tags:
        - Profile Cabang Management
      summary: Daftar profil cabang
      description: Mengambil daftar profil cabang dengan struktur organisasi
      operationId: listProfileCabang
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OrderByParam'
        - name: ids_profile_cabang
          in: query
          schema:
            type: string
        - name: ids_cabang
          in: query
          schema:
            type: string
        - name: cabang
          in: query
          schema:
            type: string
        - name: ketua
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Daftar profil cabang berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileCabangListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Profile Cabang Management
      summary: Buat profil cabang baru
      description: Membuat profil cabang dengan visi-misi dan SK
      operationId: createProfileCabang
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileCabangRequest'
      responses:
        '200':
          description: Profil cabang berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileCabangResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/profile-cabang/{id}:
    put:
      tags:
        - Profile Cabang Management
      summary: Update profil cabang
      operationId: updateProfileCabang
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileCabangRequest'
      responses:
        '200':
          description: Profil cabang berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Profile Cabang Management
      summary: Hapus profil cabang
      operationId: deleteProfileCabang
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      responses:
        '200':
          description: Profil cabang berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/profile-cabang/single:
    get:
      tags:
        - Profile Cabang Management
      summary: Ambil profil cabang single
      operationId: getSingleProfileCabang
      security:
        - BearerAuth: []
      parameters:
        - name: ids_profile_cabang
          in: query
          schema:
            type: integer
        - name: ids_cabang
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Data profil cabang berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleProfileCabangResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== PROVINSI ====================
  /settings/provinsi:
    get:
      tags:
        - Geographic - Provinsi
      summary: Daftar provinsi
      description: Mengambil daftar provinsi dengan filter dan pagination
      operationId: listProvinsi
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OrderByParam'
        - name: ids_provinsi
          in: query
          schema:
            type: string
        - name: kode_provinsi
          in: query
          schema:
            type: string
        - name: provinsi
          in: query
          schema:
            type: string
        - name: pulau
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [YA, TIDAK]
      responses:
        '200':
          description: Daftar provinsi berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinsiListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Geographic - Provinsi
      summary: Buat provinsi baru
      operationId: createProvinsi
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProvinsiRequest'
      responses:
        '200':
          description: Provinsi berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProvinsiResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/provinsi/{id}:
    put:
      tags:
        - Geographic - Provinsi
      summary: Update provinsi
      operationId: updateProvinsi
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProvinsiRequest'
      responses:
        '200':
          description: Provinsi berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Geographic - Provinsi
      summary: Hapus provinsi
      operationId: deleteProvinsi
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      responses:
        '200':
          description: Provinsi berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/provinsi/single:
    get:
      tags:
        - Geographic - Provinsi
      summary: Ambil provinsi single
      operationId: getSingleProvinsi
      security:
        - BearerAuth: []
      parameters:
        - name: ids_provinsi
          in: query
          schema:
            type: integer
        - name: kode_provinsi
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Data provinsi berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleProvinsiResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== KABUPATEN/KOTA ====================
  /settings/kabupaten-kota:
    get:
      tags:
        - Geographic - Kabupaten/Kota
      summary: Daftar kabupaten/kota
      operationId: listKabKota
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OrderByParam'
        - name: ids_provinsi
          in: query
          schema:
            type: string
        - name: ids_kabkota
          in: query
          schema:
            type: string
        - name: kabkota
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [YA, TIDAK]
      responses:
        '200':
          description: Daftar kabupaten/kota berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KabKotaListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Geographic - Kabupaten/Kota
      summary: Buat kabupaten/kota baru
      operationId: createKabKota
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKabKotaRequest'
      responses:
        '200':
          description: Kabupaten/Kota berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKabKotaResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/kabupaten-kota/{id}:
    put:
      tags:
        - Geographic - Kabupaten/Kota
      summary: Update kabupaten/kota
      operationId: updateKabKota
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKabKotaRequest'
      responses:
        '200':
          description: Kabupaten/Kota berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Geographic - Kabupaten/Kota
      summary: Hapus kabupaten/kota
      operationId: deleteKabKota
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      responses:
        '200':
          description: Kabupaten/Kota berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/kabupaten-kota/single:
    get:
      tags:
        - Geographic - Kabupaten/Kota
      summary: Ambil kabupaten/kota single
      operationId: getSingleKabKota
      security:
        - BearerAuth: []
      parameters:
        - name: ids_kabkota
          in: query
          schema:
            type: integer
        - name: kabkota
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Data kabupaten/kota berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleKabKotaResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== KECAMATAN ====================
  /settings/kecamatan:
    get:
      tags:
        - Geographic - Kecamatan
      summary: Daftar kecamatan
      operationId: listKecamatan
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OrderByParam'
        - name: ids_provinsi
          in: query
          schema:
            type: string
        - name: ids_kabkota
          in: query
          schema:
            type: string
        - name: ids_kecamatan
          in: query
          schema:
            type: string
        - name: kecamatan
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [YA, TIDAK]
      responses:
        '200':
          description: Daftar kecamatan berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KecamatanListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Geographic - Kecamatan
      summary: Buat kecamatan baru
      operationId: createKecamatan
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKecamatanRequest'
      responses:
        '200':
          description: Kecamatan berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKecamatanResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/kecamatan/{id}:
    put:
      tags:
        - Geographic - Kecamatan
      summary: Update kecamatan
      operationId: updateKecamatan
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKecamatanRequest'
      responses:
        '200':
          description: Kecamatan berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Geographic - Kecamatan
      summary: Hapus kecamatan
      operationId: deleteKecamatan
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      responses:
        '200':
          description: Kecamatan berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/kecamatan/single:
    get:
      tags:
        - Geographic - Kecamatan
      summary: Ambil kecamatan single
      operationId: getSingleKecamatan
      security:
        - BearerAuth: []
      parameters:
        - name: ids_kecamatan
          in: query
          schema:
            type: integer
        - name: kecamatan
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Data kecamatan berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleKecamatanResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== KELURAHAN ====================
  /settings/kelurahan:
    get:
      tags:
        - Geographic - Kelurahan
      summary: Daftar kelurahan
      operationId: listKelurahan
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OrderByParam'
        - name: ids_provinsi
          in: query
          schema:
            type: string
        - name: ids_kabkota
          in: query
          schema:
            type: string
        - name: ids_kecamatan
          in: query
          schema:
            type: string
        - name: ids_kelurahan
          in: query
          schema:
            type: string
        - name: kelurahan
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [YA, TIDAK]
      responses:
        '200':
          description: Daftar kelurahan berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KelurahanListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Geographic - Kelurahan
      summary: Buat kelurahan baru
      operationId: createKelurahan
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKelurahanRequest'
      responses:
        '200':
          description: Kelurahan berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKelurahanResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/kelurahan/{id}:
    put:
      tags:
        - Geographic - Kelurahan
      summary: Update kelurahan
      operationId: updateKelurahan
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKelurahanRequest'
      responses:
        '200':
          description: Kelurahan berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Geographic - Kelurahan
      summary: Hapus kelurahan
      operationId: deleteKelurahan
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/IdPathParam'
      responses:
        '200':
          description: Kelurahan berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /settings/kelurahan/single:
    get:
      tags:
        - Geographic - Kelurahan
      summary: Ambil kelurahan single
      operationId: getSingleKelurahan
      security:
        - BearerAuth: []
      parameters:
        - name: ids_kelurahan
          in: query
          schema:
            type: integer
        - name: kelurahan
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Data kelurahan berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleKelurahanResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  parameters:
    PageParam:
      name: page
      in: query
      schema:
        type: integer
        default: 1
      description: Nomor halaman

    LimitParam:
      name: limit
      in: query
      schema:
        type: integer
        default: 10
      description: Jumlah data per halaman

    OrderByParam:
      name: order_by
      in: query
      schema:
        type: string
        default: created_at DESC
      description: Urutan sorting

    IdPathParam:
      name: id
      in: path
      required: true
      schema:
        type: integer
      description: ID resource

  schemas:
    # ==================== AUTH SCHEMAS ====================
    RegisterRequest:
      type: object
      required:
        - username
        - password
        - confirm_password
      properties:
        username:
          type: string
          minLength: 4
          maxLength: 20
          pattern: '^[a-zA-Z0-9._]+$'
          example: john_doe
        password:
          type: string
          minLength: 8
          example: Secure@Pass123
        confirm_password:
          type: string
          example: Secure@Pass123
        reset:
          type: string
          enum: [YA, TIDAK]
          default: TIDAK

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: john_doe
        password:
          type: string
          example: Secure@Pass123

    CreateTokenRequest:
      type: object
      required:
        - payload
      properties:
        payload:
          type: object
          additionalProperties: true

    DeleteTokenRequest:
      type: object
      properties:
        keterangan:
          type: string
          default: LOGOUT

    # ==================== USER SCHEMAS ====================
    CreateUserRequest:
      type: object
      required:
        - ids_grup
        - username
        - password
        - confirm_password
      properties:
        ids_grup:
          type: integer
          example: 1
        username:
          type: string
          minLength: 3
          maxLength: 50
          pattern: '^[a-zA-Z0-9._]+$'
          example: newuser
        password:
          type: string
          minLength: 8
          example: SecurePass@123
        confirm_password:
          type: string
          example: SecurePass@123
        reset:
          type: string
          enum: [YA, TIDAK]
          default: TIDAK

    UpdateUserRequest:
      type: object
      properties:
        ids_grup:
          type: integer
        username:
          type: string
          minLength: 3
          maxLength: 50
        password:
          type: string
          minLength: 8
        confirm_password:
          type: string

    # ==================== PROFILE SCHEMAS ====================
    CreateProfileRequest:
      type: object
      required:
        - nama_lengkap
        - jenis_kelamin
      properties:
        nama_lengkap:
          type: string
          minLength: 3
          maxLength: 255
          example: John Doe
        jenis_kelamin:
          type: string
          enum: [LAKI-LAKI, PEREMPUAN]
          example: LAKI-LAKI
        ids_kelurahan:
          type: integer
          nullable: true
        rw:
          type: string
          maxLength: 5
          nullable: true
        rt:
          type: string
          maxLength: 5
          nullable: true
        alamat:
          type: string
          nullable: true
        nmr_tlpn:
          type: string
          minLength: 10
          maxLength: 20
          nullable: true
        foto:
          type: string
          nullable: true

    UpdateProfileRequest:
      type: object
      properties:
        nama_lengkap:
          type: string
        jenis_kelamin:
          type: string
          enum: [LAKI-LAKI, PEREMPUAN]
        ids_kelurahan:
          type: integer
        alamat:
          type: string
        nmr_tlpn:
          type: string
        foto:
          type: string

    # ==================== CABANG SCHEMAS ====================
    CreateCabangRequest:
      type: object
      required:
        - cabang
        - ids_kabkota
        - alamat
        - status
      properties:
        cabang:
          type: string
          example: Cabang Jakarta Pusat
        ids_kabkota:
          type: integer
          example: 101
        alamat:
          type: string
          example: Jl. Merdeka No. 1
        status:
          type: string
          enum: [YA, TIDAK]
          example: YA

    UpdateCabangRequest:
      type: object
      properties:
        cabang:
          type: string
        ids_kabkota:
          type: integer
        alamat:
          type: string
        status:
          type: string
          enum: [YA, TIDAK]

    # ==================== PROFILE CABANG SCHEMAS ====================
    CreateProfileCabangRequest:
      type: object
      required:
        - ids_cabang
        - profile
        - visi
        - misi
        - program
        - nomor_sk
        - masa_aktif
        - file_sk
      properties:
        ids_cabang:
          type: integer
          example: 1
        ketua:
          type: integer
          nullable: true
          example: 10
        sekretaris:
          type: integer
          nullable: true
          example: 11
        bendahara:
          type: integer
          nullable: true
          example: 12
        profile:
          type: string
          example: Profil cabang
        visi:
          type: string
          example: Visi cabang
        misi:
          type: string
          example: Misi cabang
        program:
          type: string
          example: Program cabang
        nomor_sk:
          type: string
          maxLength: 255
          example: SK/PPBI/001/2025
        masa_aktif:
          type: string
          format: date
          example: '2025-01-01'
        file_sk:
          type: string
          example: https://example.com/sk.pdf

    UpdateProfileCabangRequest:
      type: object
      properties:
        ids_cabang:
          type: integer
        ketua:
          type: integer
        sekretaris:
          type: integer
        bendahara:
          type: integer
        profile:
          type: string
        visi:
          type: string
        misi:
          type: string
        program:
          type: string
        nomor_sk:
          type: string
        masa_aktif:
          type: string
          format: date
        file_sk:
          type: string

    # ==================== PROVINSI SCHEMAS ====================
    CreateProvinsiRequest:
      type: object
      required:
        - kode_provinsi
        - provinsi
        - pulau
        - status
      properties:
        kode_provinsi:
          type: string
          maxLength: 5
          example: '11'
        provinsi:
          type: string
          example: DKI Jakarta
        pulau:
          type: string
          enum:
            [PAPUA, KALIMANTAN, SUMATERA, SULAWESI, JAWA, TIMOR, HALMAHERA, SERAM, SUMBAWA, FLORES]
          example: JAWA
        status:
          type: string
          enum: [YA, TIDAK]
          example: YA

    UpdateProvinsiRequest:
      type: object
      properties:
        kode_provinsi:
          type: string
          maxLength: 5
        provinsi:
          type: string
        pulau:
          type: string
          enum:
            [PAPUA, KALIMANTAN, SUMATERA, SULAWESI, JAWA, TIMOR, HALMAHERA, SERAM, SUMBAWA, FLORES]
        status:
          type: string
          enum: [YA, TIDAK]

    # ==================== KABUPATEN/KOTA SCHEMAS ====================
    CreateKabKotaRequest:
      type: object
      required:
        - kode_kabkota
        - ids_provinsi
        - kabkota
        - status
      properties:
        kode_kabkota:
          type: string
          example: '1101'
        ids_provinsi:
          type: integer
          example: 1
        kabkota:
          type: string
          example: Jakarta Pusat
        status:
          type: string
          enum: [YA, TIDAK]
          example: YA

    UpdateKabKotaRequest:
      type: object
      properties:
        kode_kabkota:
          type: string
        ids_provinsi:
          type: integer
        kabkota:
          type: string
        status:
          type: string
          enum: [YA, TIDAK]

    # ==================== KECAMATAN SCHEMAS ====================
    CreateKecamatanRequest:
      type: object
      required:
        - kode_kecamatan
        - ids_kabkota
        - kecamatan
        - status
      properties:
        kode_kecamatan:
          type: string
          maxLength: 15
          example: '110100'
        ids_kabkota:
          type: integer
          example: 101
        kecamatan:
          type: string
          example: Menteng
        status:
          type: string
          enum: [YA, TIDAK]
          example: YA

    UpdateKecamatanRequest:
      type: object
      properties:
        kode_kecamatan:
          type: string
          maxLength: 15
        ids_kabkota:
          type: integer
        kecamatan:
          type: string
        status:
          type: string
          enum: [YA, TIDAK]

    # ==================== KELURAHAN SCHEMAS ====================
    CreateKelurahanRequest:
      type: object
      required:
        - kode_kelurahan
        - ids_kecamatan
        - kelurahan
        - status
      properties:
        kode_kelurahan:
          type: string
          maxLength: 20
          example: '1101010'
        ids_kecamatan:
          type: integer
          example: 1001
        kelurahan:
          type: string
          example: Cikini
        status:
          type: string
          enum: [YA, TIDAK]
          example: YA

    UpdateKelurahanRequest:
      type: object
      properties:
        kode_kelurahan:
          type: string
          maxLength: 20
        ids_kecamatan:
          type: integer
        kelurahan:
          type: string
        status:
          type: string
          enum: [YA, TIDAK]

    # ==================== DATA MODELS ====================
    ProvinsiData:
      type: object
      properties:
        ids_provinsi:
          type: integer
        kode_provinsi:
          type: string
        provinsi:
          type: string
        pulau:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time

    KabKotaData:
      type: object
      properties:
        ids_kabkota:
          type: integer
        kode_kabkota:
          type: string
        kabkota:
          type: string
        ids_provinsi:
          type: integer
        provinsi:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time

    KecamatanData:
      type: object
      properties:
        ids_kecamatan:
          type: integer
        kode_kecamatan:
          type: string
        kecamatan:
          type: string
        ids_kabkota:
          type: integer
        kabkota:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time

    KelurahanData:
      type: object
      properties:
        ids_kelurahan:
          type: integer
        kode_kelurahan:
          type: string
        kelurahan:
          type: string
        ids_kecamatan:
          type: integer
        kecamatan:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time

    # ==================== RESPONSE SCHEMAS ====================
    RegisterResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        message:
          type: string
        data:
          type: object
          properties:
            id_user:
              type: integer

    LoginResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            token:
              type: string

    TokenResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            token:
              type: string

    CreateUserResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            id_user:
              type: integer

    CreateProfileResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            id_profile:
              type: integer

    CreateCabangResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            ids_cabang:
              type: integer

    CreateProfileCabangResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            ids_profile_cabang:
              type: integer

    CreateProvinsiResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            ids_provinsi:
              type: integer

    CreateKabKotaResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            ids_kabkota:
              type: integer

    CreateKecamatanResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            ids_kecamatan:
              type: integer

    CreateKelurahanResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            ids_kelurahan:
              type: integer

    UserListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleUserResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    ProfileListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleProfileResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    CabangListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleCabangResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    ProfileCabangListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleProfileCabangResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    ProvinsiListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ProvinsiData'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleProvinsiResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/ProvinsiData'

    KabKotaListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/KabKotaData'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleKabKotaResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/KabKotaData'

    KecamatanListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/KecamatanData'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleKecamatanResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/KecamatanData'

    KelurahanListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/KelurahanData'
            pagination:
              $ref: '#/components/schemas/Pagination'

    SingleKelurahanResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          $ref: '#/components/schemas/KelurahanData'

    PreviewExcelResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    ImportExcelResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          example: success
        data:
          type: object

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
        last_page:
          type: integer

    SuccessResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        status:
          type: string
          enum: [success]
        message:
          type: string
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
          enum: [error]
        message:
          oneOf:
            - type: string
            - type: object

  responses:
    BadRequest:
      description: Request tidak valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Tidak terautentikasi
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Forbidden:
      description: Akses ditolak
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource tidak ditemukan
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ValidationError:
      description: Validasi input gagal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token dari endpoint login atau Google OAuth

security:
  - BearerAuth: []
